# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson
'.source.python':
  'Open read':
    'prefix': 'wopenr'
    'body': """
    with open(${1:file_name},${2:"r"}) as ${3:file_var}:
        ${4:text}=${3:file_var}.read()
    """
  'Open write':
    'prefix': 'wopenw'
    'body': """
    with open(${1:file_name},${2:"w"}) as ${3:file_var}:
        ${3:file_var}.write(${4:text})
    """
'.source.java':
  'BufferedReader':
    'prefix': 'bfr'
    'body': """
    BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
    """
  'StringTokenizer':
    'prefix': 'stt'
    'body': """
    StringTokenizer ${1:st} = new StringTokenizer(input.readLine());
    """
  'Next Token':
    'prefix': 'nxt'
    'body':"""
    ${1:st}.nextToken();
    """
  'Proco Import':
    'prefix': 'pi'
    'body': """
    import java.io.*;
    import java.util.*;
    import java.lang.*;
    """
  'Next Int':
    'prefix': 'ni'
    'body':"""
    int ${1:a} = Integer.parseInt(${2:st}.nextToken());
    """

  'Main IOException':
    'prefix': 'mainio'
    'body': """
    public static void main(String[] args) throws IOException {
      BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
      $1
    }
    """
